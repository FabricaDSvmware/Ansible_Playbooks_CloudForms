---
- hosts: all
  gather_facts: false
  connection: local

  vars:
    provider_id: "55000000000004"
    max_retries: 9
    retry_interval: 20

  tasks:
    - debug: var=vcenter_hostname
    - debug: var=esxi_host
    - debug: var=datacenter
    - debug: var=iso
    - debug: var=osid
    - debug: var=cpucount
    - debug: var=memory
    - debug: var=network
    - debug: var=datastore
    - debug: var=disk_size
    - debug: var=notes
    - debug: var=manageiq.api_url
    - debug: var=manageiq.api_token
    - debug: var=manageiq.service

    - name: Set the Provider URL
      set_fact:
        provider_url: "{{ manageiq.api_url }}/api/providers/{{ provider_id }}"

    - name: Set the Service URL
      set_fact:
        svc_url: "/api/{{ manageiq.service }}"

    - debug: var=svc_url        

    - name: Create Virtual Machines
      vsphere_guest:
        validate_certs: no
        vcenter_hostname: "{{ vcenter_hostname }}"
        guest: "{{ inventory_hostname }}"
        state: present
        vm_extra_config:
          notes: "{{ notes }}"
        vm_disk:
          disk1:
            size_gb: "{{ disk_size }}"
            type: thin
            datastore: "{{ datastore }}"
        vm_nic:
          nic1:
            type: vmxnet3
            network: "{{ network }}"
            network_type: standard
        vm_hardware:
          memory_mb: "{{ memory }}"
          num_cpus: "{{ cpucount }}"
          osid: "{{ osid }}"
          scsi: paravirtual
          vm_cdrom:
            type: "iso"
            iso_path: "{{ iso }}"
        esxi:
          datacenter: "{{ datacenter }}"
          hostname: "{{ esxi_host }}"
      register: new_vm

    - debug: var=new_vm    

    - set_fact: new_vm_uuid="{{ new_vm.ansible_facts.hw_product_uuid }}"

    - debug: var=new_vm_uuid

    - name: Gather the facts for the VM
      vsphere_guest:
        validate_certs: no
        vcenter_hostname: "{{ vcenter_hostname }}"
        guest: "{{ inventory_hostname }}"
        vmware_guest_facts: yes
      register: new_vm

    - debug: var=new_vm    

    - set_fact: new_vm_uuid="{{ new_vm.ansible_facts.hw_product_uuid }}"

    - debug: var=new_vm_uuid

    - set_fact: find_vm_url="{{ manageiq.api_url }}/api/vms?expand=resources&attributes=href,uid_ems&filter[]=uid_ems='{{ new_vm_uuid }}'"

    - debug: var=find_vm_url

    - name: Call to CloudForms to find href for new_vm_uuid
      uri:
        url: "{{ find_vm_url }}"
        method: GET
        validate_certs: no
        headers:
           X-Auth-Token: "{{ manageiq.api_token }}"
           Content-Type: "application/json"
        body_format: json
        return_content: yes
      register: token_output

    - debug: var=token_output
